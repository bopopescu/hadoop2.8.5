# Chinese (China) translations for Hue.
# Copyright (C) 2013 Cloudera, Inc
# This file is distributed under the same license as the Hue project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Hue VERSION\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2018-10-16 20:03-0700\n"
"PO-Revision-Date: 2013-10-28 10:31-0700\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_Hans_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: src/metadata/catalog_api.py:432
msgid ""
"update_properties requires an 'id' parameter and 'keys' parameter that is"
" a non-empty list"
msgstr "update_properties 需要一个 'id' 参数和 'keys' 参数，即，非空列表"

#: src/metadata/conf.py:91
msgid "Configuration options for Optimizer API"
msgstr "优化器 API 的配置选项"

#: src/metadata/conf.py:95
msgid "Hostname to Optimizer API or compatible service."
msgstr "优化器 API 或兼容服务的主机名。"

#: src/metadata/conf.py:100 src/metadata/conf.py:191
msgid "The name of the key of the service."
msgstr "服务的密钥名称。"

#: src/metadata/conf.py:105 src/metadata/conf.py:196
msgid "The private part of the key associated with the auth_key."
msgstr "与 auth_key 关联的密钥的私钥部分。"

#: src/metadata/conf.py:110
msgid ""
"Execute this script to produce the auth_key secret. This will be used "
"when `auth_key_secret` is not set."
msgstr "执行此脚本以生成 auth_key 密钥。如果未设置“auth_key_secret”，则会使用此密钥。"

#: src/metadata/conf.py:116
msgid ""
"The name of the workload where queries are uploaded and optimizations are"
" calculated from. Automatically guessed from auth_key and cluster_id if "
"not specified."
msgstr "用于上传查询和计算优化的工作负载名称。如果未指定，则根据 auth_key 和 cluster_id 自动猜测。"

#: src/metadata/conf.py:121
msgid ""
"The name of the cluster used to determine the tenant id when this one is "
"not specified. Defaults to the cluster Id or 'default'."
msgstr "如果未指定租户 ID，则为用于确定租户 ID 的群集名称。默认为群集 ID 或“default”。"

#: src/metadata/conf.py:127 src/metadata/conf.py:337
msgid ""
"Perform Sentry privilege filtering. Default to true automatically if the "
"cluster is secure."
msgstr "执行 Sentry 权限筛选。如果群集是安全的，则自动默认为 true。"

#: src/metadata/conf.py:134
msgid ""
"The cache TTL in milliseconds for the assist/autocomplete/etc calls. Set "
"to 0 to disable the cache."
msgstr "用于 assist/autocomplete/ 等调用的缓存 TTL（以毫秒为单位）。设置为 0 将禁用缓存。"

#: src/metadata/conf.py:138
msgid ""
"Automatically upload queries after their execution in order to improve "
"recommendations."
msgstr "执行后自动上传查询以改进建议。"

#: src/metadata/conf.py:144
msgid ""
"Automatically upload queried tables DDL in order to improve "
"recommendations."
msgstr "自动上传查询到的表 DDL以改进建议。"

#: src/metadata/conf.py:150
msgid ""
"Automatically upload queried tables and columns stats in order to improve"
" recommendations."
msgstr "自动上传查询到的表和列统计数据以改进建议。"

#: src/metadata/conf.py:156
msgid ""
"Allow admins to upload the last N executed queries in the quick start "
"wizard. Use 0 to disable."
msgstr "允许管理员在快速启动向导中上传已执行的 N 个查询。使用 0 可禁用。"

#: src/metadata/conf.py:166
msgid "Configuration options for Altus API"
msgstr ""

#: src/metadata/conf.py:170
msgid "Hostname prefix to Altus API or compatible service."
msgstr ""

#: src/metadata/conf.py:174
msgid "Hostname prefix to Altus ADB API or compatible service."
msgstr ""

#: src/metadata/conf.py:178
msgid "Hostname prefix to Altus DE API or compatible service."
msgstr ""

#: src/metadata/conf.py:182
msgid "Hostname prefix to Altus WA API or compatible service."
msgstr ""

#: src/metadata/conf.py:186
msgid "Switch to turn on workload analytics insights."
msgstr ""

#: src/metadata/conf.py:204
msgid "Configuration options for Kubernetes API"
msgstr ""

#: src/metadata/conf.py:208
msgid "API URL to Kubernetes API or compatible service."
msgstr ""

#: src/metadata/conf.py:215
msgid "Public key used for cluster creation."
msgstr ""

#: src/metadata/conf.py:271
msgid "Configuration options for Navigator API"
msgstr "Navigator API 的配置选项"

#: src/metadata/conf.py:275
msgid "Base URL to Navigator API."
msgstr "Navigator API 的基本 URL。"

#: src/metadata/conf.py:279
msgid "Which authentication to use: CM or external via LDAP or SAML."
msgstr "要使用哪种身份验证方法：CM 还是通过 LDAP 或 SAML 进行外部身份验证。"

#: src/metadata/conf.py:284
msgid "Username of the CM user used for authentication."
msgstr "用于身份验证的 CM 用户的用户名。"

#: src/metadata/conf.py:288
msgid "CM password of the user used for authentication."
msgstr "用于身份验证的用户的 CM 密码。"

#: src/metadata/conf.py:293
msgid ""
"Execute this script to produce the CM password. This will be used when "
"the plain password is not set."
msgstr "执行此脚本以生成 CM 密码。如果未设置明文密码，则会使用此密码。"

#: src/metadata/conf.py:300
msgid "Username of the LDAP user used for authentication."
msgstr "用于身份验证的 LDAP 用户的用户名。"

#: src/metadata/conf.py:304
msgid "LDAP password of the user used for authentication."
msgstr "用于身份验证的用户的 LDAP 密码。"

#: src/metadata/conf.py:309
msgid ""
"Execute this script to produce the LDAP password. This will be used when "
"the plain password is not set."
msgstr "执行此脚本以生成 LDAP 密码。如果未设置明文密码，则会使用此密码。"

#: src/metadata/conf.py:316
msgid "Username of the SAML user used for authentication."
msgstr "用于身份验证的 SAML 用户的用户名。"

#: src/metadata/conf.py:320
msgid "SAML password of the user used for authentication."
msgstr "用于身份验证的用户的 SAML 密码。"

#: src/metadata/conf.py:325
msgid ""
"Execute this script to produce the SAML password. This will be used when "
"the plain password  is not set."
msgstr "执行此脚本以生成 SAML 密码。如果未设置明文密码，则会使用此密码。"

#: src/metadata/conf.py:332
msgid ""
"Navigator configuration directory, where navigator.client.properties is "
"located."
msgstr "navigator.client.properties 所在的 Navigator 配置目录。"

#: src/metadata/conf.py:343
msgid "Max number of items to fetch in one call in object search."
msgstr "在对象搜索中一次调用可获取的最大项数。"

#: src/metadata/conf.py:349
msgid "Max number of items to fetch in one call in object search autocomplete."
msgstr "在对象搜索自动完成中一次调用可获取的最大项数。"

#: src/metadata/conf.py:356
msgid "Enable to search HDFS, S3 files."
msgstr "启用以搜索 HDFS、S3 文件。"

#: src/metadata/conf.py:366
msgid "Configuration options for Manager API"
msgstr ""

#: src/metadata/conf.py:370
msgid "Base URL to API."
msgstr ""

#: src/metadata/catalog/base.py:38 src/metadata/catalog/base.py:49
#: src/metadata/catalog/base.py:60 src/metadata/manager_client.py:39
#: src/metadata/optimizer_client.py:52
msgid "No error message, please check the logs."
msgstr "无错误消息，请检查日志。"

#: src/metadata/optimizer_api.py:352
msgid "Query history upload requires Admin privileges or feature is disabled."
msgstr "查询历史记录上传需要管理员权限或此功能处于禁用状态。"

#: src/metadata/optimizer_api.py:377
msgid "Skipped as task query"
msgstr "已作为任务查询跳过"

#: src/metadata/optimizer_api.py:379
msgid "Skipped"
msgstr "已跳过"

#: src/metadata/optimizer_client.py:177
msgid "Error while accessing Optimizer"
msgstr "访问优化器时出错"

#: src/metadata/optimizer_client.py:236
msgid "Call not supported"
msgstr "不支持调用"

#: src/metadata/optimizer_client.py:407
#, python-format
msgid "Could not get tenant id from cluster id %s: %s"
msgstr "无法从集群 ID %s 获取租户 ID：%s"

#: src/metadata/catalog/base.py:33
#, python-format
msgid "Catalog connector interface not recognized: %s"
msgstr ""

#: src/metadata/catalog/navigator_client.py:279
#: src/metadata/catalog/navigator_client.py:359
msgid "Failed to authenticate."
msgstr "身份验证失败。"

#~ msgid ""
#~ "add_tags requires an 'id' parameter and"
#~ " 'tags' parameter that is a non-"
#~ "empty list of tags"
#~ msgstr "add_tags 需要一个 'id' 参数和 'tags' 参数，即，标记的非空列表"

#~ msgid ""
#~ "update_properties requires an 'id' parameter"
#~ " and 'properties' or 'metadata' parameters"
#~ " that are non-empty dicts"
#~ msgstr "update_properties 需要“id”参数以及“properties”或“metadata”参数，并且这些参数为非空目录"

#~ msgid "Error accessing"
#~ msgstr "访问时出错"

